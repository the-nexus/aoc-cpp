#pragma once

#include <memory>
#include <string>
#include <vector>

#include "ChallengeAbstract.h"

#pragma region Autogenerated_Include
#include "Year2018/ChallengeFactory.h"
#include "Year2021/ChallengeFactory.h"
#include "Year2022/ChallengeFactory.h"
#include "Year2023/ChallengeFactory.h"
#pragma endregion Autogenerated_Include

namespace ChallengeFactory
{
    std::unique_ptr<ChallengeAbstract> MakeChallenge(int const year, int const day, std::vector<std::string> const& inputLines)
    {
        switch (year)
        {
#pragma region Autogenerated_Factory
        case 2018: return Year2018::MakeChallenge(day, inputLines);
        case 2021: return Year2021::MakeChallenge(day, inputLines);
        case 2022: return Year2022::MakeChallenge(day, inputLines);
        case 2023: return Year2023::MakeChallenge(day, inputLines);
#pragma endregion Autogenerated_Factory

        default: return nullptr;
        }
    }
}
